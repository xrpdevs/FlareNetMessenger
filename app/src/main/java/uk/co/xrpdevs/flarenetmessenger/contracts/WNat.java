package uk.co.xrpdevs.flarenetmessenger.contracts;

import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class WNat extends Contract {
    public static final String BINARY = "0x60806040526011805460ff60a01b191690553480156200001e57600080fd5b50604051620046e8380380620046e8833981810160405260608110156200004457600080fd5b8151602083018051604051929492938301929190846401000000008211156200006c57600080fd5b9083019060208201858111156200008257600080fd5b82516401000000008111828201881017156200009d57600080fd5b82525081516020918201929091019080838360005b83811015620000cc578181015183820152602001620000b2565b50505050905090810190601f168015620000fa5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011e57600080fd5b9083019060208201858111156200013457600080fd5b82516401000000008111828201881017156200014f57600080fd5b82525081516020918201929091019080838360005b838110156200017e57818101518382015260200162000164565b50505050905090810190601f168015620001ac5780820380516001836020036101000a031916815260200191505b50604052505050828282828083838160039080519060200190620001d292919062000354565b508051620001e890600490602084019062000354565b50506005805460ff19166012179055506001600160a01b038116156200021357620002138162000270565b506001600160a01b03811662000263576040805162461bcd60e51b815260206004820152601060248201526f5f676f7665726e616e6365207a65726f60801b604482015290519081900360640190fd5b5050505050505062000400565b600d54600160a01b900460ff1615620002d0576040805162461bcd60e51b815260206004820152601460248201527f696e697469616c6973656420213d2066616c7365000000000000000000000000604482015290519081900360640190fd5b600d805460ff60a01b1916600160a01b179055600c54604080516001600160a01b039283168152918316602083015280517f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d9281900390910190a1600c80546001600160a01b039092166001600160a01b0319928316179055600d80549091169055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200038c5760008555620003d7565b82601f10620003a757805160ff1916838001178555620003d7565b82800160010185558215620003d7579182015b82811115620003d7578251825591602001919060010190620003ba565b50620003e5929150620003e9565b5090565b5b80821115620003e55760008155600101620003ea565b6142d880620004106000396000f3fe60806040526004361061036f5760003560e01c806395d89b41116101c6578063d06dc3ad116100f7578063e64767aa11610095578063f5f3d4f71161006f578063f5f3d4f714610f2b578063f62f8f3a14610f40578063f683776714610f6a578063f6a494af14610f9d5761037e565b8063e64767aa14610e76578063ed475a7914610eb9578063f0e292c914610ef25761037e565b8063d6aa0b77116100d1578063d6aa0b7714610dba578063dd62ed3e14610ded578063deea13e714610e28578063e587497e14610e3d5761037e565b8063d06dc3ad14610d46578063d0e30db014610d7f578063d38bfff414610d875761037e565b8063b302f39311610164578063be0ca7471161013e578063be0ca74714610c99578063c373a08e14610cd4578063c787a8fc14610d07578063caeb942b14610d1c5761037e565b8063b302f39314610c25578063b760faf914610c3a578063bbd6fbf814610c605761037e565b80639ca2231a116101a05780639ca2231a14610b4d5780639d6a890f14610b80578063a457c2d714610bb3578063a9059cbb14610bec5761037e565b806395d89b4114610af9578063981b24d014610b0e5780639b3baa0e14610b385761037e565b806349e3c7e5116102a0578063755d10a41161023e57806383035a821161021857806383035a8214610a395780638c2b8ae114610a7257806392bfe6d814610a875780639470b0bd14610ac05761037e565b8063755d10a4146108f95780637de5b8ed1461092c5780637f4fcaa914610a065761037e565b80635d36b1901161027a5780635d36b190146107ee5780635d6d11eb1461080357806360f7ac97146108b157806370a08231146108c65761037e565b806349e3c7e5146106a05780634ee2cd7e146107a05780635aa6e675146107d95761037e565b806323b872dd1161030d57806331d12a16116102e757806331d12a16146105e057806339509351146106135780633e5aa26a1461064c57806343ea370b146106765761037e565b806323b872dd146105485780632e1a7d4d1461058b578063313ce567146105b55761037e565b806313de97f51161034957806313de97f514610493578063142d1018146104bd57806318160ddd146105025780631fec092a146105175761037e565b8063026e402b1461038357806306fdde03146103bc578063095ea7b3146104465761037e565b3661037e5761037c610fd0565b005b600080fd5b34801561038f57600080fd5b5061037c600480360360408110156103a657600080fd5b506001600160a01b038135169060200135611012565b3480156103c857600080fd5b506103d16110ad565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561040b5781810151838201526020016103f3565b50505050905090810190601f1680156104385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045257600080fd5b5061047f6004803603604081101561046957600080fd5b506001600160a01b0381351690602001356110bc565b604080519115158252519081900360200190f35b34801561049f57600080fd5b5061037c600480360360208110156104b657600080fd5b50356110da565b3480156104c957600080fd5b506104f0600480360360208110156104e057600080fd5b50356001600160a01b03166112de565b60408051918252519081900360200190f35b34801561050e57600080fd5b506104f0611366565b34801561052357600080fd5b5061052c61136c565b604080516001600160a01b039092168252519081900360200190f35b34801561055457600080fd5b5061047f6004803603606081101561056b57600080fd5b506001600160a01b0381358116916020810135909116906040013561137b565b34801561059757600080fd5b5061037c600480360360208110156105ae57600080fd5b5035611403565b3480156105c157600080fd5b506105ca611474565b6040805160ff9092168252519081900360200190f35b3480156105ec57600080fd5b5061037c6004803603602081101561060357600080fd5b50356001600160a01b031661147e565b34801561061f57600080fd5b5061047f6004803603604081101561063657600080fd5b506001600160a01b03813516906020013561161e565b34801561065857600080fd5b506104f06004803603602081101561066f57600080fd5b503561166c565b34801561068257600080fd5b506104f06004803603602081101561069957600080fd5b5035611677565b3480156106ac57600080fd5b50610750600480360360408110156106c357600080fd5b810190602081018135600160201b8111156106dd57600080fd5b8201836020820111156106ef57600080fd5b803590602001918460208302840111600160201b8311171561071057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250611732915050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561078c578181015183820152602001610774565b505050509050019250505060405180910390f35b3480156107ac57600080fd5b506104f0600480360360408110156107c357600080fd5b506001600160a01b038135169060200135611894565b3480156107e557600080fd5b5061052c6118a0565b3480156107fa57600080fd5b5061037c6118af565b34801561080f57600080fd5b506104f06004803603602081101561082657600080fd5b810190602081018135600160201b81111561084057600080fd5b82018360208201111561085257600080fd5b803590602001918460208302840111600160201b8311171561087357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611971945050505050565b3480156108bd57600080fd5b5061052c611a23565b3480156108d257600080fd5b506104f0600480360360208110156108e957600080fd5b50356001600160a01b0316611a32565b34801561090557600080fd5b5061037c6004803603602081101561091c57600080fd5b50356001600160a01b0316611a4d565b34801561093857600080fd5b5061095f6004803603602081101561094f57600080fd5b50356001600160a01b0316611cb5565b604051808060200180602001858152602001848152602001838103835287818151815260200191508051906020019060200280838360005b838110156109af578181015183820152602001610997565b50505050905001838103825286818151815260200191508051906020019060200280838360005b838110156109ee5781810151838201526020016109d6565b50505050905001965050505050505060405180910390f35b348015610a1257600080fd5b5061037c60048036036020811015610a2957600080fd5b50356001600160a01b0316611e78565b348015610a4557600080fd5b506104f060048036036040811015610a5c57600080fd5b506001600160a01b038135169060200135611ea2565b348015610a7e57600080fd5b5061052c611f44565b348015610a9357600080fd5b506104f060048036036040811015610aaa57600080fd5b506001600160a01b038135169060200135611f53565b348015610acc57600080fd5b5061037c60048036036040811015610ae357600080fd5b506001600160a01b038135169060200135611fb1565b348015610b0557600080fd5b506103d1612073565b348015610b1a57600080fd5b506104f060048036036020811015610b3157600080fd5b503561207d565b348015610b4457600080fd5b5061052c612088565b348015610b5957600080fd5b5061037c60048036036020811015610b7057600080fd5b50356001600160a01b0316612097565b348015610b8c57600080fd5b5061037c60048036036020811015610ba357600080fd5b50356001600160a01b03166121c2565b348015610bbf57600080fd5b5061047f60048036036040811015610bd657600080fd5b506001600160a01b03813516906020013561229c565b348015610bf857600080fd5b5061047f60048036036040811015610c0f57600080fd5b506001600160a01b038135169060200135612304565b348015610c3157600080fd5b5061037c612318565b61037c60048036036020811015610c5057600080fd5b50356001600160a01b0316612398565b348015610c6c57600080fd5b5061037c60048036036040811015610c8357600080fd5b506001600160a01b03813516906020013561243f565b348015610ca557600080fd5b506104f060048036036040811015610cbc57600080fd5b506001600160a01b03813581169160200135166125ac565b348015610ce057600080fd5b5061037c60048036036020811015610cf757600080fd5b50356001600160a01b0316612623565b348015610d1357600080fd5b5061047f61267f565b348015610d2857600080fd5b506104f060048036036020811015610d3f57600080fd5b503561268f565b348015610d5257600080fd5b5061037c60048036036040811015610d6957600080fd5b506001600160a01b03813516906020013561269a565b61037c610fd0565b348015610d9357600080fd5b5061037c60048036036020811015610daa57600080fd5b50356001600160a01b03166126bb565b348015610dc657600080fd5b506104f060048036036020811015610ddd57600080fd5b50356001600160a01b0316612734565b348015610df957600080fd5b506104f060048036036040811015610e1057600080fd5b506001600160a01b038135811691602001351661279a565b348015610e3457600080fd5b506104f06127c5565b348015610e4957600080fd5b506104f060048036036040811015610e6057600080fd5b506001600160a01b0381351690602001356127cf565b348015610e8257600080fd5b506104f060048036036060811015610e9957600080fd5b506001600160a01b03813581169160208101359091169060400135612843565b348015610ec557600080fd5b5061095f60048036036040811015610edc57600080fd5b506001600160a01b0381351690602001356128f7565b348015610efe57600080fd5b506104f060048036036040811015610f1557600080fd5b506001600160a01b038135169060200135612ac3565b348015610f3757600080fd5b506104f0612b30565b348015610f4c57600080fd5b506104f060048036036020811015610f6357600080fd5b5035612b3a565b348015610f7657600080fd5b506104f060048036036020811015610f8d57600080fd5b50356001600160a01b0316612ba5565b348015610fa957600080fd5b5061037c60048036036020811015610fc057600080fd5b50356001600160a01b0316612bfb565b610fda3334612d7a565b60408051348152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a2565b61101a612e6a565b6001600160a01b0316636230001a338461103333611a32565b856040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050600060405180830381600087803b15801561109157600080fd5b505af11580156110a5573d6000803e3d6000fd5b505050505050565b60606110b7612ecb565b905090565b60006110d06110c9612f61565b8484612f65565b5060015b92915050565b600c546001600160a01b03163314806110fd57506011546001600160a01b031633145b61114e576040805162461bcd60e51b815260206004820152601a60248201527f6f6e6c7920676f7665726e616e6365206f72206d616e61676572000000000000604482015290519081900360640190fd5b61115781613051565b600e546001600160a01b0316156111ce57600e54604080516313de97f560e01b81526004810184905290516001600160a01b03909216916313de97f59160248082019260009290919082900301818387803b1580156111b557600080fd5b505af11580156111c9573d6000803e3d6000fd5b505050505b600f546001600160a01b0316158015906111f95750600e54600f546001600160a01b03908116911614155b1561126457600f54604080516313de97f560e01b81526004810184905290516001600160a01b03909216916313de97f59160248082019260009290919082900301818387803b15801561124b57600080fd5b505af115801561125f573d6000803e3d6000fd5b505050505b6010546001600160a01b0316156112db57601054604080516313de97f560e01b81526004810184905290516001600160a01b03909216916313de97f59160248082019260009290919082900301818387803b1580156112c257600080fd5b505af11580156112d6573d6000803e3d6000fd5b505050505b50565b60006112e86130d5565b6001600160a01b031663142d1018836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561133457600080fd5b505afa158015611348573d6000803e3d6000fd5b505050506040513d602081101561135e57600080fd5b505192915050565b60025490565b600f546001600160a01b031690565b6000611388848484613136565b6113f884611394612f61565b6113f38560405180606001604052806028815260200161415d602891396001600160a01b038a166000908152600160205260408120906113d2612f61565b6001600160a01b031681526020810191909152604001600020549190613291565b612f65565b5060015b9392505050565b61140d3382613328565b60408051828152905133917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65919081900360200190a2604051339082156108fc029083906000818181858888f19350505050158015611470573d6000803e3d6000fd5b5050565b60006110b7613424565b61148661342d565b6001600160a01b038116156115af57306001600160a01b0316816001600160a01b031663653718836040518163ffffffff1660e01b815260040160206040518083038186803b1580156114d857600080fd5b505afa1580156114ec573d6000803e3d6000fd5b505050506040513d602081101561150257600080fd5b50516001600160a01b0316146115495760405162461bcd60e51b81526004018080602001828103825260228152602001806142816022913960400191505060405180910390fd5b806001600160a01b03166313de97f5611560613480565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561159657600080fd5b505af11580156115aa573d6000803e3d6000fd5b505050505b600e5460408051600081526001600160a01b03928316602082015291831682820152517fbec98a6c0f609cda6b9f23b95824ba6ac733cb57edd17d344f2f2796844007399181900360600190a1600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60006110d061162b612f61565b846113f3856001600061163c612f61565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490613486565b60006110d48261207d565b600b546000906001600160a01b031633146116d1576040805162461bcd60e51b815260206004820152601560248201527413db9b1e4818db19585b995c8818dbdb9d1c9858dd605a1b604482015290519081900360640190fd5b600a548210611727576040805162461bcd60e51b815260206004820152601e60248201527f4e6f20636c65616e757020616674657220636c65616e757020626c6f636b0000604482015290519081900360640190fd5b6110d46009836134e0565b606061173c6130d5565b6001600160a01b03166349e3c7e584846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156117a1578181015183820152602001611789565b50505050905001935050505060006040518083038186803b1580156117c557600080fd5b505afa1580156117d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561180257600080fd5b8101908080516040519392919084600160201b82111561182157600080fd5b90830190602082018581111561183657600080fd5b82518660208202830111600160201b8211171561185257600080fd5b82525081516020918201928201910280838360005b8381101561187f578181015183820152602001611867565b50505050905001604052505050905092915050565b60006113fc8383613514565b600c546001600160a01b031681565b600d546001600160a01b031633146118fe576040805162461bcd60e51b815260206004820152600d60248201526c1b9bdd0818db185a5b585a5b9d609a1b604482015290519081900360640190fd5b600c54600d54604080516001600160a01b03938416815292909116602083015280517f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d9281900390910190a1600d8054600c80546001600160a01b03199081166001600160a01b03841617909155169055565b600061197b612e6a565b6001600160a01b0316630f8b8af733846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156119e95781810151838201526020016119d1565b505050509050019350505050602060405180830381600087803b158015611a0f57600080fd5b505af1158015611348573d6000803e3d6000fd5b600d546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b611a5561342d565b6001600160a01b03811615611c4657306001600160a01b0316816001600160a01b031663653718836040518163ffffffff1660e01b815260040160206040518083038186803b158015611aa757600080fd5b505afa158015611abb573d6000803e3d6000fd5b505050506040513d6020811015611ad157600080fd5b50516001600160a01b031614611b185760405162461bcd60e51b81526004018080602001828103825260228152602001806142816022913960400191505060405180910390fd5b601154600160a01b900460ff161580611b925750806001600160a01b031663aa94d3f26040518163ffffffff1660e01b815260040160206040518083038186803b158015611b6557600080fd5b505afa158015611b79573d6000803e3d6000fd5b505050506040513d6020811015611b8f57600080fd5b50515b611bcd5760405162461bcd60e51b81526004018080602001828103825260298152602001806141346029913960400191505060405180910390fd5b806001600160a01b03166313de97f5611be4613480565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611c1a57600080fd5b505af1158015611c2e573d6000803e3d6000fd5b50506011805460ff60a01b1916600160a01b17905550505b600f5460408051600181526001600160a01b03928316602082015291831682820152517fbec98a6c0f609cda6b9f23b95824ba6ac733cb57edd17d344f2f2796844007399181900360600190a1600f80546001600160a01b0319166001600160a01b0392909216919091179055565b606080600080611cc36130d5565b6001600160a01b0316637de5b8ed866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b158015611d0f57600080fd5b505afa158015611d23573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526080811015611d4c57600080fd5b8101908080516040519392919084600160201b821115611d6b57600080fd5b908301906020820185811115611d8057600080fd5b82518660208202830111600160201b82111715611d9c57600080fd5b82525081516020918201928201910280838360005b83811015611dc9578181015183820152602001611db1565b5050505090500160405260200180516040519392919084600160201b821115611df157600080fd5b908301906020820185811115611e0657600080fd5b82518660208202830111600160201b82111715611e2257600080fd5b82525081516020918201928201910280838360005b83811015611e4f578181015183820152602001611e37565b505050509190910160409081526020830151920151959b949a5090985093965091945050505050565b611e8061342d565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6000611eac6130d5565b6001600160a01b0316633150392784611ec58686611894565b856040518463ffffffff1660e01b815260040180846001600160a01b03168152602001838152602001828152602001935050505060206040518083038186803b158015611f1157600080fd5b505afa158015611f25573d6000803e3d6000fd5b505050506040513d6020811015611f3b57600080fd5b50519392505050565b6010546001600160a01b031690565b6000611f5d6130d5565b6001600160a01b03166392bfe6d884846040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b158015611f1157600080fd5b611ff882336113f38460405180604001604052806014815260200173616c6c6f77616e63652062656c6f77207a65726f60601b815250611ff1883361279a565b9190613291565b6120028282613328565b6040805182815290516001600160a01b038416917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65919081900360200190a2604051339082156108fc029083906000818181858888f1935050505015801561206e573d6000803e3d6000fd5b505050565b60606110b761356c565b60006110d4826135cd565b600e546001600160a01b031690565b61209f61342d565b306001600160a01b0316816001600160a01b031663653718836040518163ffffffff1660e01b815260040160206040518083038186803b1580156120e257600080fd5b505afa1580156120f6573d6000803e3d6000fd5b505050506040513d602081101561210c57600080fd5b50516001600160a01b0316146121535760405162461bcd60e51b815260040180806020018281038252603d815260200180614185603d913960400191505060405180910390fd5b60105460408051600281526001600160a01b03928316602082015291831682820152517fbec98a6c0f609cda6b9f23b95824ba6ac733cb57edd17d344f2f2796844007399181900360600190a1601080546001600160a01b0319166001600160a01b0392909216919091179055565b600d54600160a01b900460ff1615612218576040805162461bcd60e51b8152602060048201526014602482015273696e697469616c6973656420213d2066616c736560601b604482015290519081900360640190fd5b600d805460ff60a01b1916600160a01b179055600c54604080516001600160a01b039283168152918316602083015280517f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d9281900390910190a1600c80546001600160a01b039092166001600160a01b0319928316179055600d80549091169055565b60006110d06122a9612f61565b846113f38560405180606001604052806025815260200161425c60259139600160006122d3612f61565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190613291565b60006110d0612311612f61565b8484613136565b612320612e6a565b6001600160a01b03166305109ecf3361233833611a32565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561237e57600080fd5b505af1158015612392573d6000803e3d6000fd5b50505050565b6001600160a01b0381166123f3576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206465706f73697420746f207a65726f20616464726573730000604482015290519081900360640190fd5b6123fd8134612d7a565b6040805134815290516001600160a01b038316917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a250565b600f54600e546001600160a01b03918216911681156124ea57816001600160a01b031663c7c62fab33866124733388611894565b876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050600060405180830381600087803b1580156124d157600080fd5b505af11580156124e5573d6000803e3d6000fd5b505050505b816001600160a01b0316816001600160a01b03161415801561251457506001600160a01b03811615155b1561239257806001600160a01b031663c7c62fab33866125343388611894565b876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001838152602001828152602001945050505050600060405180830381600087803b15801561259257600080fd5b505af19250505080156125a3575060015b61239257612392565b60006125b66130d5565b6001600160a01b0316639dc6b9f284846125cf87611a32565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b03168152602001828152602001935050505060206040518083038186803b158015611f1157600080fd5b61262b61342d565b600d80546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f1f95fb40be3a947982072902a887b521248d1d8931a39eb38f84f4d6fd758b699181900360200190a150565b601154600160a01b900460ff1681565b60006110d48261361c565b6126a2612e6a565b6001600160a01b031663404d9e82338461103333611a32565b6126c361342d565b600c54604080516001600160a01b039283168152918316602083015280517f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d9281900390910190a1600c80546001600160a01b039092166001600160a01b0319928316179055600d80549091169055565b600061273e6130d5565b6001600160a01b0316634a03d5568361275685611a32565b6040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b15801561133457600080fd5b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006110b7613480565b60006127d96130d5565b6001600160a01b031663e587497e84846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561282f57600080fd5b505af1158015611f25573d6000803e3d6000fd5b600061284d6130d5565b6001600160a01b031663833aca9285856128678887611894565b866040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b0316815260200183815260200182815260200194505050505060206040518083038186803b1580156128c357600080fd5b505afa1580156128d7573d6000803e3d6000fd5b505050506040513d60208110156128ed57600080fd5b5051949350505050565b6060806000806129056130d5565b6001600160a01b031663ed475a7987876040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060006040518083038186803b15801561295957600080fd5b505afa15801561296d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052608081101561299657600080fd5b8101908080516040519392919084600160201b8211156129b557600080fd5b9083019060208201858111156129ca57600080fd5b82518660208202830111600160201b821117156129e657600080fd5b82525081516020918201928201910280838360005b83811015612a135781810151838201526020016129fb565b5050505090500160405260200180516040519392919084600160201b821115612a3b57600080fd5b908301906020820185811115612a5057600080fd5b82518660208202830111600160201b82111715612a6c57600080fd5b82525081516020918201928201910280838360005b83811015612a99578181015183820152602001612a81565b505050509190910160409081526020830151920151959c949b509099509397509195505050505050565b600b546000906001600160a01b03163314612b1d576040805162461bcd60e51b815260206004820152601560248201527413db9b1e4818db19585b995c8818dbdb9d1c9858dd605a1b604482015290519081900360640190fd5b600a546113fc906006908590859061370a565b60006110b7611366565b600b546000906001600160a01b03163314612b94576040805162461bcd60e51b815260206004820152601560248201527413db9b1e4818db19585b995c8818dbdb9d1c9858dd605a1b604482015290519081900360640190fd5b600a546110d4906007908490613750565b6000612baf6130d5565b6001600160a01b031663f6837767836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561133457600080fd5b612c0361342d565b612c0c81613816565b600e546001600160a01b031615612c8457600e546040805163f6a494af60e01b81526001600160a01b0384811660048301529151919092169163f6a494af91602480830192600092919082900301818387803b158015612c6b57600080fd5b505af1158015612c7f573d6000803e3d6000fd5b505050505b600f546001600160a01b031615801590612caf5750600e54600f546001600160a01b03908116911614155b15612d1b57600f546040805163f6a494af60e01b81526001600160a01b0384811660048301529151919092169163f6a494af91602480830192600092919082900301818387803b158015612d0257600080fd5b505af1158015612d16573d6000803e3d6000fd5b505050505b6010546001600160a01b0316156112db576010546040805163f6a494af60e01b81526001600160a01b0384811660048301529151919092169163f6a494af91602480830192600092919082900301818387803b1580156112c257600080fd5b6001600160a01b038216612dd5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612de160008383613838565b600254612dee9082613486565b6002556001600160a01b038216600090815260208190526040902054612e149082613486565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600f546000906001600160a01b0316806110b7576040805162461bcd60e51b815260206004820152601e60248201527f546f6b656e206d697373696e67207772697465205650436f6e74726163740000604482015290519081900360640190fd5b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015612f575780601f10612f2c57610100808354040283529160200191612f57565b820191906000526020600020905b815481529060010190602001808311612f3a57829003601f168201915b5050505050905090565b3390565b6001600160a01b038316612faa5760405162461bcd60e51b81526004018080602001828103825260248152602001806142086024913960400191505060405180910390fd5b6001600160a01b038216612fef5760405162461bcd60e51b81526004018080602001828103825260228152602001806140976022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600a548110156130925760405162461bcd60e51b81526004018080602001828103825260288152602001806140df6028913960400191505060405180910390fd5b4381106130d05760405162461bcd60e51b81526004018080602001828103825260218152602001806140766021913960400191505060405180910390fd5b600a55565b600e546000906001600160a01b0316806110b7576040805162461bcd60e51b815260206004820152601d60248201527f546f6b656e206d697373696e672072656164205650436f6e7472616374000000604482015290519081900360640190fd5b6001600160a01b03831661317b5760405162461bcd60e51b81526004018080602001828103825260258152602001806141e36025913960400191505060405180910390fd5b6001600160a01b0382166131c05760405162461bcd60e51b81526004018080602001828103825260238152602001806140316023913960400191505060405180910390fd5b6131cb838383613838565b613208816040518060600160405280602681526020016140b9602691396001600160a01b0386166000908152602081905260409020549190613291565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546132379082613486565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156133205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156132e55781810151838201526020016132cd565b50505050905090810190601f1680156133125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b03821661336d5760405162461bcd60e51b81526004018080602001828103825260218152602001806141c26021913960400191505060405180910390fd5b61337982600083613838565b6133b681604051806060016040528060228152602001614054602291396001600160a01b0385166000908152602081905260409020549190613291565b6001600160a01b0383166000908152602081905260409020556002546133dc9082613a1d565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60055460ff1690565b600c546001600160a01b0316331461347e576040805162461bcd60e51b815260206004820152600f60248201526e6f6e6c7920676f7665726e616e636560881b604482015290519081900360640190fd5b565b600a5490565b6000828201838110156113fc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000818152602083905260408120541561350b575060008181526020839052604081205560016110d4565b50600092915050565b600081600a548110156135585760405162461bcd60e51b815260040180806020018281038252602d815260200180614107602d913960400191505060405180910390fd5b61356460068585613a7a565b949350505050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015612f575780601f10612f2c57610100808354040283529160200191612f57565b600081600a548110156136115760405162461bcd60e51b815260040180806020018281038252602d815260200180614107602d913960400191505060405180910390fd5b6113fc600784613aa5565b600081600a548110156136605760405162461bcd60e51b815260040180806020018281038252602d815260200180614107602d913960400191505060405180910390fd5b4383106136b4576040805162461bcd60e51b815260206004820181905260248201527f43616e206f6e6c79206265207573656420666f72207061737420626c6f636b73604482015290519081900360640190fd5b6000806136c46009600787613bcb565b915091508015613702576040805186815290517ffec477a10b4fcdfdf1114eb32b3caf6118b2d76d20e1fcb70007274bb4b616be9181900360200190a15b509392505050565b60006001600160a01b03841615613745576001600160a01b038416600090815260208690526040902061373e908484613750565b9050613564565b506000949350505050565b60008161375f575060006113fc565b8354806137705760009150506113fc565b6001850154600061378d6137848388613486565b60018503613c29565b9050815b81811080156137c35750858860000182600101815481106137ae57fe5b90600052602060002090600202016000015411155b156137f8578760000181815481106137d757fe5b60009182526020822060029091020181815560019081019190915501613791565b8281111561380857600188018190555b919091039695505050505050565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0316836001600160a01b0316141561389f576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b60006138aa84611a32565b905060006138b784611a32565b600f549091506001600160a01b03168015613951576040805163756da1b160e11b81526001600160a01b038881166004830152878116602483015260448201869052606482018590526084820187905291519183169163eadb43629160a48082019260009290919082900301818387803b15801561393457600080fd5b505af1158015613948573d6000803e3d6000fd5b50505050613976565b601154600160a01b900460ff16613976576011805460ff60a01b1916600160a01b1790555b6010546001600160a01b03168015613a09576040805163756da1b160e11b81526001600160a01b038981166004830152888116602483015260448201879052606482018690526084820188905291519183169163eadb43629160a48082019260009290919082900301818387803b1580156139f057600080fd5b505af1158015613a04573d6000803e3d6000fd5b505050505b613a14878787613c3f565b50505050505050565b600082821115613a74576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b0382166000908152602084905260408120613a9c8184613aa5565b95945050505050565b815460009080613ab95760009150506110d4565b4383101580613aeb5750836000016001820381548110613ad557fe5b9060005260206000209060020201600001548310155b15613b1c57836000016001820381548110613b0257fe5b9060005260206000209060020201600101549150506110d4565b60018401548454859082908110613b2f57fe5b906000526020600020906002020160000154841015613b90578015613b855760405162461bcd60e51b815260040180806020018281038252603081526020018061422c6030913960400191505060405180910390fd5b6000925050506110d4565b6000613b9d868387613c7f565b9050856000018181548110613bae57fe5b906000526020600020906002020160010154935050505092915050565b60008181526020849052604081205481908015613bf15760001901915060009050613c21565b6000613bfd8686613aa5565b9050613c0a816001613486565b600086815260208990526040902055925060019150505b935093915050565b6000818310613c3857816113fc565b5090919050565b6001600160a01b038316613c5c57613c578282613d0b565b61206e565b6001600160a01b038216613c7457613c578382613d68565b61206e838383613e10565b825460009083908290613c93906001613a1d565b90505b81811115613d02576000613cc06002613cba6001613cb48688613486565b90613486565b90613e46565b905084878281548110613ccf57fe5b90600052602060002090600202016000015411613cee57809250613cfc565b613cf9816001613a1d565b91505b50613c96565b50949350505050565b6000613d1b82613cb48543611894565b9050613d2960068483613ead565b600a54613d3d90600690859060029061370a565b50613d56613d4e83613cb44361207d565b600790613ecb565b600a5461239290600790600290613750565b6000613da78260405180604001604052806016815260200175213ab937103a37b7903134b3903337b91037bbb732b960511b815250611ff18643611894565b9050613db560068483613ead565b600a54613dc990600690859060029061370a565b50613d56613d4e836040518060400160405280601d81526020017f4275726e20746f6f2062696720666f7220746f74616c20737570706c79000000815250611ff14361207d565b613e1d6006848484613f94565b600a54613e3190600690859060029061370a565b50600a5461239290600690849060029061370a565b6000808211613e9c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381613ea557fe5b049392505050565b6001600160a01b038216600090815260208490526040902061239281835b815480613f0f57604080518082019091524381526020808201848152855460018181018855600088815293909320935160029091029093019283555191015561206e565b6000836000016001830381548110613f2357fe5b60009182526020909120600290910201805490915043811415613f4c57600182018490556112d6565b804311613f5557fe5b604080518082019091524381526020808201868152875460018181018a5560008a81529390932093516002909102909301928355519101555050505050565b80613f9e57612392565b6001600160a01b038316158015613fbc57506001600160a01b038216155b15613fc357fe5b6001600160a01b03831615613ff7576000613fe882613fe28787614023565b90613a1d565b9050613ff5858583613ead565b505b6001600160a01b0382161561239257600061401682613cb48786614023565b90506112d6858483613ead565b60006113fc838343613a7a56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e6365436c65616e757020626c6f636b206d75737420626520696e20746865207061737445524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436c65616e757020626c6f636b206e756d626572206d757374206e65766572206465637265617365436865636b506f696e7461626c653a2072656164696e672066726f6d20636c65616e65642d757020626c6f636b5650436f6e7472616374206e6f7420636f6e6669677572656420666f72207265706c6163656d656e7445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365476f7665726e616e636520766f746520706f77657220636f6e747261637420646f6573206e6f742062656c6f6e6720746f207468697320746f6b656e2e45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373436865636b506f696e74486973746f72793a2072656164696e672066726f6d20636c65616e65642d757020626c6f636b45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f5650436f6e7472616374206e6f74206f776e6564206279207468697320746f6b656ea2646970667358221220b66ab9dbb0d4ada7e190aa3852a4e25cc0980f585c8fc53e10160bd73fc5d5fc64736f6c63430007060033";

    public static final String FUNC_ALLOWANCE = "allowance";

    public static final String FUNC_APPROVE = "approve";

    public static final String FUNC_BALANCEHISTORYCLEANUP = "balanceHistoryCleanup";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_BALANCEOFAT = "balanceOfAt";

    public static final String FUNC_BATCHVOTEPOWEROFAT = "batchVotePowerOfAt";

    public static final String FUNC_CLAIMGOVERNANCE = "claimGovernance";

    public static final String FUNC_CLEANUPBLOCKNUMBER = "cleanupBlockNumber";

    public static final String FUNC_DECIMALS = "decimals";

    public static final String FUNC_DECREASEALLOWANCE = "decreaseAllowance";

    public static final String FUNC_DELEGATE = "delegate";

    public static final String FUNC_DELEGATEEXPLICIT = "delegateExplicit";

    public static final String FUNC_DELEGATESOF = "delegatesOf";

    public static final String FUNC_DELEGATESOFAT = "delegatesOfAt";

    public static final String FUNC_DELEGATIONMODEOF = "delegationModeOf";

    public static final String FUNC_DEPOSIT = "deposit";

    public static final String FUNC_DEPOSITTO = "depositTo";

    public static final String FUNC_GOVERNANCE = "governance";

    public static final String FUNC_GOVERNANCEVOTEPOWER = "governanceVotePower";

    public static final String FUNC_INCREASEALLOWANCE = "increaseAllowance";

    public static final String FUNC_INITIALISE = "initialise";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_PROPOSEGOVERNANCE = "proposeGovernance";

    public static final String FUNC_PROPOSEDGOVERNANCE = "proposedGovernance";

    public static final String FUNC_READVOTEPOWERCONTRACT = "readVotePowerContract";

    public static final String FUNC_REVOKEDELEGATIONAT = "revokeDelegationAt";

    public static final String FUNC_SETCLEANERCONTRACT = "setCleanerContract";

    public static final String FUNC_SETCLEANUPBLOCKNUMBER = "setCleanupBlockNumber";

    public static final String FUNC_SETCLEANUPBLOCKNUMBERMANAGER = "setCleanupBlockNumberManager";

    public static final String FUNC_SETGOVERNANCEVOTEPOWER = "setGovernanceVotePower";

    public static final String FUNC_SETREADVPCONTRACT = "setReadVpContract";

    public static final String FUNC_SETWRITEVPCONTRACT = "setWriteVpContract";

    public static final String FUNC_SYMBOL = "symbol";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_TOTALSUPPLYAT = "totalSupplyAt";

    public static final String FUNC_TOTALSUPPLYCACHECLEANUP = "totalSupplyCacheCleanup";

    public static final String FUNC_TOTALSUPPLYHISTORYCLEANUP = "totalSupplyHistoryCleanup";

    public static final String FUNC_TOTALVOTEPOWER = "totalVotePower";

    public static final String FUNC_TOTALVOTEPOWERAT = "totalVotePowerAt";

    public static final String FUNC_TOTALVOTEPOWERATCACHED = "totalVotePowerAtCached";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_TRANSFERFROM = "transferFrom";

    public static final String FUNC_TRANSFERGOVERNANCE = "transferGovernance";

    public static final String FUNC_UNDELEGATEALL = "undelegateAll";

    public static final String FUNC_UNDELEGATEALLEXPLICIT = "undelegateAllExplicit";

    public static final String FUNC_UNDELEGATEDVOTEPOWEROF = "undelegatedVotePowerOf";

    public static final String FUNC_UNDELEGATEDVOTEPOWEROFAT = "undelegatedVotePowerOfAt";

    public static final String FUNC_VOTEPOWERFROMTO = "votePowerFromTo";

    public static final String FUNC_VOTEPOWERFROMTOAT = "votePowerFromToAt";

    public static final String FUNC_VOTEPOWEROF = "votePowerOf";

    public static final String FUNC_VOTEPOWEROFAT = "votePowerOfAt";

    public static final String FUNC_VOTEPOWEROFATCACHED = "votePowerOfAtCached";

    public static final String FUNC_VPCONTRACTINITIALIZED = "vpContractInitialized";

    public static final String FUNC_WITHDRAW = "withdraw";

    public static final String FUNC_WITHDRAWFROM = "withdrawFrom";

    public static final String FUNC_WRITEVOTEPOWERCONTRACT = "writeVotePowerContract";

    public static final Event APPROVAL_EVENT = new Event("Approval",
            Arrays.asList(new TypeReference<Address>(true) {
            }, new TypeReference<Address>(true) {
            }, new TypeReference<Uint256>() {
            }));

    public static final Event CREATEDTOTALSUPPLYCACHE_EVENT = new Event("CreatedTotalSupplyCache",
            Arrays.asList(new TypeReference<Uint256>() {
            }));

    public static final Event DEPOSIT_EVENT = new Event("Deposit",
            Arrays.asList(new TypeReference<Address>(true) {
            }, new TypeReference<Uint256>() {
            }));

    public static final Event GOVERNANCEPROPOSED_EVENT = new Event("GovernanceProposed",
            Arrays.asList(new TypeReference<Address>() {
            }));

    public static final Event GOVERNANCEUPDATED_EVENT = new Event("GovernanceUpdated",
            Arrays.asList(new TypeReference<Address>() {
            }, new TypeReference<Address>() {
            }));

    public static final Event TRANSFER_EVENT = new Event("Transfer",
            Arrays.asList(new TypeReference<Address>(true) {
            }, new TypeReference<Address>(true) {
            }, new TypeReference<Uint256>() {
            }));

    public static final Event VOTEPOWERCONTRACTCHANGED_EVENT = new Event("VotePowerContractChanged",
            Arrays.asList(new TypeReference<Uint256>() {
            }, new TypeReference<Address>() {
            }, new TypeReference<Address>() {
            }));

    public static final Event WITHDRAWAL_EVENT = new Event("Withdrawal",
            Arrays.asList(new TypeReference<Address>(true) {
            }, new TypeReference<Uint256>() {
            }));

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected WNat(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected WNat(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected WNat(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected WNat(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalEventResponse>() {
            @Override
            public ApprovalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVAL_EVENT, log);
                ApprovalEventResponse typedResponse = new ApprovalEventResponse();
                typedResponse.log = log;
                typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
        return approvalEventFlowable(filter);
    }

    public List<CreatedTotalSupplyCacheEventResponse> getCreatedTotalSupplyCacheEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(CREATEDTOTALSUPPLYCACHE_EVENT, transactionReceipt);
        ArrayList<CreatedTotalSupplyCacheEventResponse> responses = new ArrayList<CreatedTotalSupplyCacheEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CreatedTotalSupplyCacheEventResponse typedResponse = new CreatedTotalSupplyCacheEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._blockNumber = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<CreatedTotalSupplyCacheEventResponse> createdTotalSupplyCacheEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, CreatedTotalSupplyCacheEventResponse>() {
            @Override
            public CreatedTotalSupplyCacheEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CREATEDTOTALSUPPLYCACHE_EVENT, log);
                CreatedTotalSupplyCacheEventResponse typedResponse = new CreatedTotalSupplyCacheEventResponse();
                typedResponse.log = log;
                typedResponse._blockNumber = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<CreatedTotalSupplyCacheEventResponse> createdTotalSupplyCacheEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CREATEDTOTALSUPPLYCACHE_EVENT));
        return createdTotalSupplyCacheEventFlowable(filter);
    }

    public List<DepositEventResponse> getDepositEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DEPOSIT_EVENT, transactionReceipt);
        ArrayList<DepositEventResponse> responses = new ArrayList<DepositEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DepositEventResponse typedResponse = new DepositEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.dst = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DepositEventResponse> depositEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DepositEventResponse>() {
            @Override
            public DepositEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DEPOSIT_EVENT, log);
                DepositEventResponse typedResponse = new DepositEventResponse();
                typedResponse.log = log;
                typedResponse.dst = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DepositEventResponse> depositEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DEPOSIT_EVENT));
        return depositEventFlowable(filter);
    }

    public List<GovernanceProposedEventResponse> getGovernanceProposedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(GOVERNANCEPROPOSED_EVENT, transactionReceipt);
        ArrayList<GovernanceProposedEventResponse> responses = new ArrayList<GovernanceProposedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            GovernanceProposedEventResponse typedResponse = new GovernanceProposedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.proposedGovernance = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<GovernanceProposedEventResponse> governanceProposedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, GovernanceProposedEventResponse>() {
            @Override
            public GovernanceProposedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(GOVERNANCEPROPOSED_EVENT, log);
                GovernanceProposedEventResponse typedResponse = new GovernanceProposedEventResponse();
                typedResponse.log = log;
                typedResponse.proposedGovernance = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<GovernanceProposedEventResponse> governanceProposedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(GOVERNANCEPROPOSED_EVENT));
        return governanceProposedEventFlowable(filter);
    }

    public List<GovernanceUpdatedEventResponse> getGovernanceUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(GOVERNANCEUPDATED_EVENT, transactionReceipt);
        ArrayList<GovernanceUpdatedEventResponse> responses = new ArrayList<GovernanceUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            GovernanceUpdatedEventResponse typedResponse = new GovernanceUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldGovernance = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newGoveranance = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<GovernanceUpdatedEventResponse> governanceUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, GovernanceUpdatedEventResponse>() {
            @Override
            public GovernanceUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(GOVERNANCEUPDATED_EVENT, log);
                GovernanceUpdatedEventResponse typedResponse = new GovernanceUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.oldGovernance = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newGoveranance = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<GovernanceUpdatedEventResponse> governanceUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(GOVERNANCEUPDATED_EVENT));
        return governanceUpdatedEventFlowable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
        return transferEventFlowable(filter);
    }

    public List<VotePowerContractChangedEventResponse> getVotePowerContractChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(VOTEPOWERCONTRACTCHANGED_EVENT, transactionReceipt);
        ArrayList<VotePowerContractChangedEventResponse> responses = new ArrayList<VotePowerContractChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VotePowerContractChangedEventResponse typedResponse = new VotePowerContractChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._contractType = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._oldContractAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._newContractAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VotePowerContractChangedEventResponse> votePowerContractChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VotePowerContractChangedEventResponse>() {
            @Override
            public VotePowerContractChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTEPOWERCONTRACTCHANGED_EVENT, log);
                VotePowerContractChangedEventResponse typedResponse = new VotePowerContractChangedEventResponse();
                typedResponse.log = log;
                typedResponse._contractType = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._oldContractAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._newContractAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VotePowerContractChangedEventResponse> votePowerContractChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTEPOWERCONTRACTCHANGED_EVENT));
        return votePowerContractChangedEventFlowable(filter);
    }

    public List<WithdrawalEventResponse> getWithdrawalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(WITHDRAWAL_EVENT, transactionReceipt);
        ArrayList<WithdrawalEventResponse> responses = new ArrayList<WithdrawalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            WithdrawalEventResponse typedResponse = new WithdrawalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.src = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<WithdrawalEventResponse> withdrawalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, WithdrawalEventResponse>() {
            @Override
            public WithdrawalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(WITHDRAWAL_EVENT, log);
                WithdrawalEventResponse typedResponse = new WithdrawalEventResponse();
                typedResponse.log = log;
                typedResponse.src = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<WithdrawalEventResponse> withdrawalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(WITHDRAWAL_EVENT));
        return withdrawalEventFlowable(filter);
    }

    public RemoteFunctionCall<BigInteger> allowance(String owner, String spender) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOWANCE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(owner),
                        new org.web3j.abi.datatypes.Address(spender)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> approve(String spender, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(spender),
                        new org.web3j.abi.datatypes.generated.Uint256(amount)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> balanceHistoryCleanup(String _owner, BigInteger _count) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BALANCEHISTORYCLEANUP,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner),
                        new org.web3j.abi.datatypes.generated.Uint256(_count)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> balanceOf(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BALANCEOF,
                Arrays.asList(new org.web3j.abi.datatypes.Address(account)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> balanceOfAt(String _owner, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BALANCEOFAT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<List> batchVotePowerOfAt(List<String> _owners, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BATCHVOTEPOWEROFAT,
                Arrays.asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                                org.web3j.abi.datatypes.Address.class,
                                org.web3j.abi.Utils.typeMap(_owners, org.web3j.abi.datatypes.Address.class)),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<DynamicArray<Uint256>>() {
                }));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> claimGovernance() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CLAIMGOVERNANCE,
                Arrays.asList(),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> cleanupBlockNumber() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_CLEANUPBLOCKNUMBER,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> decimals() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DECIMALS,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Uint8>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> decreaseAllowance(String spender, BigInteger subtractedValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DECREASEALLOWANCE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(spender),
                        new org.web3j.abi.datatypes.generated.Uint256(subtractedValue)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> delegate(String _to, BigInteger _bips) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELEGATE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_to),
                        new org.web3j.abi.datatypes.generated.Uint256(_bips)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> delegateExplicit(String _to, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELEGATEEXPLICIT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_to),
                        new org.web3j.abi.datatypes.generated.Uint256(_amount)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>> delegatesOf(String _owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DELEGATESOF,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner)),
                Arrays.asList(new TypeReference<DynamicArray<Address>>() {
                }, new TypeReference<DynamicArray<Uint256>>() {
                }, new TypeReference<Uint256>() {
                }, new TypeReference<Uint256>() {
                }));
        return new RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>>(function,
                new Callable<Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>(
                                convertToNative((List<Address>) results.get(0).getValue()),
                                convertToNative((List<Uint256>) results.get(1).getValue()),
                                (BigInteger) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>> delegatesOfAt(String _owner, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DELEGATESOFAT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<DynamicArray<Address>>() {
                }, new TypeReference<DynamicArray<Uint256>>() {
                }, new TypeReference<Uint256>() {
                }, new TypeReference<Uint256>() {
                }));
        return new RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>>(function,
                new Callable<Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<List<String>, List<BigInteger>, BigInteger, BigInteger>(
                                convertToNative((List<Address>) results.get(0).getValue()),
                                convertToNative((List<Uint256>) results.get(1).getValue()),
                                (BigInteger) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> delegationModeOf(String _who) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DELEGATIONMODEOF,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_who)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> deposit() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT,
                Arrays.asList(),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deposit(BigInteger _amountWei) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSIT,
                Arrays.asList(),
                Collections.emptyList());
        return executeRemoteCallTransaction(function, _amountWei);
    }

    public RemoteFunctionCall<TransactionReceipt> depositTo(String recipient) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSITTO,
                Arrays.asList(new org.web3j.abi.datatypes.Address(recipient)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> governance() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GOVERNANCE,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> governanceVotePower() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GOVERNANCEVOTEPOWER,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> increaseAllowance(String spender, BigInteger addedValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INCREASEALLOWANCE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(spender),
                        new org.web3j.abi.datatypes.generated.Uint256(addedValue)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> initialise(String _governance) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INITIALISE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_governance)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_NAME,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Utf8String>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> proposeGovernance(String _governance) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PROPOSEGOVERNANCE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_governance)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> proposedGovernance() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PROPOSEDGOVERNANCE,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> readVotePowerContract() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_READVOTEPOWERCONTRACT,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeDelegationAt(String _who, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEDELEGATIONAT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_who),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCleanerContract(String _cleanerContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCLEANERCONTRACT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_cleanerContract)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCleanupBlockNumber(BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCLEANUPBLOCKNUMBER,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCleanupBlockNumberManager(String _cleanupBlockNumberManager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCLEANUPBLOCKNUMBERMANAGER,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_cleanupBlockNumberManager)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setGovernanceVotePower(String _governanceVotePower) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETGOVERNANCEVOTEPOWER,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_governanceVotePower)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setReadVpContract(String _vpContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETREADVPCONTRACT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_vpContract)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setWriteVpContract(String _vpContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETWRITEVPCONTRACT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_vpContract)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> symbol() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SYMBOL,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Utf8String>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> totalSupply() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALSUPPLY,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> totalSupplyAt(BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALSUPPLYAT,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> totalSupplyCacheCleanup(BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOTALSUPPLYCACHECLEANUP,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> totalSupplyHistoryCleanup(BigInteger _count) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOTALSUPPLYHISTORYCLEANUP,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(_count)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> totalVotePower() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALVOTEPOWER,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> totalVotePowerAt(BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALVOTEPOWERAT,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> totalVotePowerAtCached(BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOTALVOTEPOWERATCACHED,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transfer(String recipient, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFER,
                Arrays.asList(new org.web3j.abi.datatypes.Address(recipient),
                        new org.web3j.abi.datatypes.generated.Uint256(amount)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferFrom(String sender, String recipient, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERFROM,
                Arrays.asList(new org.web3j.abi.datatypes.Address(sender),
                        new org.web3j.abi.datatypes.Address(recipient),
                        new org.web3j.abi.datatypes.generated.Uint256(amount)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferGovernance(String _governance) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERGOVERNANCE,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_governance)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> undelegateAll() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNDELEGATEALL,
                Arrays.asList(),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> undelegateAllExplicit(List<String> _delegateAddresses) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNDELEGATEALLEXPLICIT,
                Arrays.asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(_delegateAddresses, org.web3j.abi.datatypes.Address.class))),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> undelegatedVotePowerOf(String _owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_UNDELEGATEDVOTEPOWEROF,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> undelegatedVotePowerOfAt(String _owner, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_UNDELEGATEDVOTEPOWEROFAT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> votePowerFromTo(String _from, String _to) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTEPOWERFROMTO,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_from),
                        new org.web3j.abi.datatypes.Address(_to)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> votePowerFromToAt(String _from, String _to, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTEPOWERFROMTOAT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_from),
                        new org.web3j.abi.datatypes.Address(_to),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> votePowerOf(String _owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTEPOWEROF,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> votePowerOfAt(String _owner, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VOTEPOWEROFAT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Arrays.asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> votePowerOfAtCached(String _owner, BigInteger _blockNumber) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTEPOWEROFATCACHED,
                Arrays.asList(new org.web3j.abi.datatypes.Address(_owner),
                        new org.web3j.abi.datatypes.generated.Uint256(_blockNumber)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> vpContractInitialized() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VPCONTRACTINITIALIZED,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Bool>() {
                }));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> withdraw(BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAW,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(amount)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> withdrawFrom(String owner, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWFROM,
                Arrays.asList(new org.web3j.abi.datatypes.Address(owner),
                        new org.web3j.abi.datatypes.generated.Uint256(amount)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> writeVotePowerContract() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WRITEVOTEPOWERCONTRACT,
                Arrays.asList(),
                Arrays.asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static WNat load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new WNat(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static WNat load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new WNat(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static WNat load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new WNat(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static WNat load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new WNat(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<WNat> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _governance, String _name, String _symbol) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.asList(new org.web3j.abi.datatypes.Address(_governance),
                new org.web3j.abi.datatypes.Utf8String(_name),
                new org.web3j.abi.datatypes.Utf8String(_symbol)));
        return deployRemoteCall(WNat.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<WNat> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _governance, String _name, String _symbol) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.asList(new org.web3j.abi.datatypes.Address(_governance),
                new org.web3j.abi.datatypes.Utf8String(_name),
                new org.web3j.abi.datatypes.Utf8String(_symbol)));
        return deployRemoteCall(WNat.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<WNat> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _governance, String _name, String _symbol) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.asList(new org.web3j.abi.datatypes.Address(_governance),
                new org.web3j.abi.datatypes.Utf8String(_name),
                new org.web3j.abi.datatypes.Utf8String(_symbol)));
        return deployRemoteCall(WNat.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<WNat> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _governance, String _name, String _symbol) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.asList(new org.web3j.abi.datatypes.Address(_governance),
                new org.web3j.abi.datatypes.Utf8String(_name),
                new org.web3j.abi.datatypes.Utf8String(_symbol)));
        return deployRemoteCall(WNat.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class ApprovalEventResponse extends BaseEventResponse {
        public String owner;

        public String spender;

        public BigInteger value;
    }

    public static class CreatedTotalSupplyCacheEventResponse extends BaseEventResponse {
        public BigInteger _blockNumber;
    }

    public static class DepositEventResponse extends BaseEventResponse {
        public String dst;

        public BigInteger amount;
    }

    public static class GovernanceProposedEventResponse extends BaseEventResponse {
        public String proposedGovernance;
    }

    public static class GovernanceUpdatedEventResponse extends BaseEventResponse {
        public String oldGovernance;

        public String newGoveranance;
    }

    public static class TransferEventResponse extends BaseEventResponse {
        public String from;

        public String to;

        public BigInteger value;
    }

    public static class VotePowerContractChangedEventResponse extends BaseEventResponse {
        public BigInteger _contractType;

        public String _oldContractAddress;

        public String _newContractAddress;
    }

    public static class WithdrawalEventResponse extends BaseEventResponse {
        public String src;

        public BigInteger amount;
    }
}
